
name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Decode Keystore and Setup Build
      env:
        SIGNING_KEY_STORE_BASE64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        KEYSTORE_FILE: app/keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.SIGNING_KEY_ALIAS_PASSWORD }}
      run: |
        printf "%s" "$SIGNING_KEY_STORE_BASE64" | base64 --decode > $KEYSTORE_FILE
        echo "KEYSTORE_FILE=${KEYSTORE_FILE}" >> $GITHUB_ENV
        echo "KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}" >> $GITHUB_ENV
        echo "KEY_ALIAS=${KEY_ALIAS}" >> $GITHUB_ENV
        echo "KEY_PASSWORD=${KEY_PASSWORD}" >> $GITHUB_ENV

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '8.4'
        arguments: :app:assembleRelease

    - name: Add Android Build Tools to PATH
      run: |
        # Find the apksigner executable within ANDROID_HOME and add its directory to PATH
        APKSIGNER_PATH=$(find "$ANDROID_HOME" -name "apksigner" -type f | head -n 1)
        if [ -z "$APKSIGNER_PATH" ]; then
          echo "Error: apksigner not found in ANDROID_HOME."
          exit 1
        fi
        APKSIGNER_DIR=$(dirname "$APKSIGNER_PATH")
        echo "Adding $APKSIGNER_DIR to PATH"
        echo "$APKSIGNER_DIR" >> $GITHUB_PATH

    - name: Verify APK Signature
      run: |
        # Find the generated APK file
        APK_FILE=$(find app/build/outputs/apk/release/ -name "kozt-now-playing-*.apk")
        # Verify the APK signature
        # apksigner is part of Android SDK build-tools and should be available in PATH
        apksigner verify --verbose "$APK_FILE"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: kozt-now-playing-apk
        path: app/build/outputs/apk/release/kozt-now-playing-*.apk
